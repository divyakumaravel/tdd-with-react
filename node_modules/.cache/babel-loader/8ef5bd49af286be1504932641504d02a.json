{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\todomatic\\\\src\\\\component\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo(props) {\n  _s();\n\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  const editingTemplate = /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: [\"New name for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        className: \"todo-text\",\n        type: \"text\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn todo-cancel\",\n        onClick: () => setEditing(false),\n        children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"renaming \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn__primary todo-edit\",\n        children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: [\"new name for \", props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n\n  const viewTemplate = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stack-small\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"c-cb\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: props.id,\n        type: \"checkbox\",\n        defaultChecked: props.completed,\n        onChange: () => props.toggleTaskCompleted(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"todo-label\",\n        htmlFor: props.id,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => setEditing(true),\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn__danger\",\n        onClick: () => props.deleteTask(props.id),\n        children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this); // return (\n  //     <li className=\"todo stack-small\">\n  //         <div className=\"c-cb\">\n  //             <input\n  //                 id={props.id}\n  //                 type=\"checkbox\"\n  //                 defaultChecked={props.completed}\n  //                 onChange={() => props.toggleTaskCompleted(props.id)}\n  //             />\n  //             <label className=\"todo-label\" htmlFor={props.id}>\n  //                 {props.name}\n  //             </label>\n  //         </div>\n  //         <div className=\"btn-group\">\n  //             <button type=\"button\" className=\"btn\">\n  //                 Edit <span className=\"visually-hidden\">{props.name}</span>\n  //             </button>\n  //             <button\n  //                 type=\"button\"\n  //                 className=\"btn btn__danger\"\n  //                 onClick={() => props.deleteTask(props.id)}\n  //             >\n  //                 Delete <span className=\"visually-hidden\">{props.name}</span>\n  //             </button>\n  //         </div>\n  //     </li>\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: isEditing ? editingTemplate : viewTemplate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Todo, \"sXN9PY+tFVl0ATWUxw1/pO5209c=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/React/todomatic/src/component/Todo.js"],"names":["React","useState","Todo","props","isEditing","setEditing","newName","setNewName","handleChange","e","target","value","editingTemplate","id","name","viewTemplate","completed","toggleTaskCompleted","deleteTask"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nexport default function Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    function handleChange(e) {\r\n        setNewName(e.target.value);\r\n      }      \r\n\r\n    const editingTemplate = (\r\n        <form className=\"stack-small\">\r\n          <div className=\"form-group\">\r\n            <label className=\"todo-label\" htmlFor={props.id}>\r\n              New name for {props.name}\r\n            </label>\r\n            <input \r\n            id={props.id} \r\n            className=\"todo-text\" \r\n            type=\"text\" \r\n            onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n              Cancel\r\n              <span className=\"visually-hidden\">renaming {props.name}</span>\r\n            </button>\r\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n              Save\r\n              <span className=\"visually-hidden\">new name for {props.name}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      );\r\n      const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n          <div className=\"c-cb\">\r\n              <input\r\n                id={props.id}\r\n                type=\"checkbox\"\r\n                defaultChecked={props.completed}\r\n                onChange={() => props.toggleTaskCompleted(props.id)}\r\n              />\r\n              <label className=\"todo-label\" htmlFor={props.id}>\r\n                {props.name}\r\n              </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n                Edit <span className=\"visually-hidden\">{props.name}</span>\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn__danger\"\r\n                onClick={() => props.deleteTask(props.id)}\r\n              >\r\n                Delete <span className=\"visually-hidden\">{props.name}</span>\r\n              </button>\r\n            </div>\r\n        </div>\r\n      );\r\n      \r\n    // return (\r\n    //     <li className=\"todo stack-small\">\r\n    //         <div className=\"c-cb\">\r\n    //             <input\r\n    //                 id={props.id}\r\n    //                 type=\"checkbox\"\r\n    //                 defaultChecked={props.completed}\r\n    //                 onChange={() => props.toggleTaskCompleted(props.id)}\r\n    //             />\r\n    //             <label className=\"todo-label\" htmlFor={props.id}>\r\n    //                 {props.name}\r\n    //             </label>\r\n    //         </div>\r\n    //         <div className=\"btn-group\">\r\n    //             <button type=\"button\" className=\"btn\">\r\n    //                 Edit <span className=\"visually-hidden\">{props.name}</span>\r\n    //             </button>\r\n    //             <button\r\n    //                 type=\"button\"\r\n    //                 className=\"btn btn__danger\"\r\n    //                 onClick={() => props.deleteTask(props.id)}\r\n    //             >\r\n    //                 Delete <span className=\"visually-hidden\">{props.name}</span>\r\n    //             </button>\r\n    //         </div>\r\n    //     </li>\r\n    // );\r\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n\r\n}"]},"metadata":{},"sourceType":"module"}