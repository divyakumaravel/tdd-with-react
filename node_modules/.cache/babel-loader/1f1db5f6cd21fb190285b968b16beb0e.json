{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\todomatic\\\\src\\\\component\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form(props) {\n  _s();\n\n  const [name, setName] = useState('');\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"   \");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"label-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-todo-input\",\n        className: \"label__lg\",\n        children: \"What needs to be done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"new-todo-input\",\n      className: \"input input__lg\",\n      name: \"text\",\n      autoComplete: \"off\",\n      value: name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn__primary btn__lg\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"/PAWDgWx7+Y6BmsFMUKcdrcX5eM=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/React/todomatic/src/component/Form.js"],"names":["React","useState","Form","props","name","setName","handleChange","e","target","value","handleSubmit","preventDefault","addTask"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAwB;AACpBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,YAAT,CAAsBH,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,KAAK,CAACS,OAAN,CAAcR,IAAd;AACAC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA,4BACA;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,6BACE;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAgC,QAAA,SAAS,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAMA;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,KAAK,EAAEN,IANT;AAOE,MAAA,QAAQ,EAAEE;AAPZ;AAAA;AAAA;AAAA;AAAA,YANA,eAeA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,0BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GAnCQJ,I;;KAAAA,I;AAqCT,eAAeA,IAAf","sourcesContent":["import React, {useState} from \"react\"\r\n\r\nfunction Form(props){\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    function handleChange(e){\r\n        setName(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n        props.addTask(name)\r\n        setName(\"   \")\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n            What needs to be done?\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}